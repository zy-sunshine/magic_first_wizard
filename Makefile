#############################################################################
# Makefile for building: magic_first_wizard
# Generated by qmake (2.01a) (Qt 4.6.2) on: ?? 4? 30 15:00:41 2010
# Project:  magic_first_wizard.pro
# Template: app
# Command: /usr/lib/qt4/bin/qmake -spec /usr/lib/qt4/mkspecs/linux-g++ -unix CONFIG+=debug -o Makefile magic_first_wizard.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -g -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -g -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/lib/qt4/mkspecs/linux-g++ -I. -I/usr/lib/qt4/include/QtCore -I/usr/lib/qt4/include/QtGui -I/usr/lib/qt4/include -I.
LINK          = g++
LFLAGS        = -Wl,-rpath,/usr/lib/qt4/lib
LIBS          = $(SUBLIBS)  -L/usr/lib/qt4/lib -lQtGui -L/usr/lib/qt4/lib -L/usr/X11R6/lib -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/lib/qt4/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = 
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = wizard.cpp \
		thankspage.cpp \
		tcpipinfopage.cpp \
		tcpipcfgpage.cpp \
		startcfgpage.cpp \
		rootless.cpp \
		netcardpage.cpp \
		main.cpp \
		intropage.cpp \
		dnscfgpage.cpp \
		conclusionpage.cpp \
		bootactivatepage.cpp moc_wizard.cpp \
		moc_thankspage.cpp \
		moc_conclusionpage.cpp
OBJECTS       = wizard.o \
		thankspage.o \
		tcpipinfopage.o \
		tcpipcfgpage.o \
		startcfgpage.o \
		rootless.o \
		netcardpage.o \
		main.o \
		intropage.o \
		dnscfgpage.o \
		conclusionpage.o \
		bootactivatepage.o \
		moc_wizard.o \
		moc_thankspage.o \
		moc_conclusionpage.o
DIST          = /usr/lib/qt4/mkspecs/common/g++.conf \
		/usr/lib/qt4/mkspecs/common/unix.conf \
		/usr/lib/qt4/mkspecs/common/linux.conf \
		/usr/lib/qt4/mkspecs/qconfig.pri \
		/usr/lib/qt4/mkspecs/features/qt_functions.prf \
		/usr/lib/qt4/mkspecs/features/qt_config.prf \
		/usr/lib/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/lib/qt4/mkspecs/features/default_pre.prf \
		/usr/lib/qt4/mkspecs/features/debug.prf \
		/usr/lib/qt4/mkspecs/features/default_post.prf \
		/usr/lib/qt4/mkspecs/features/warn_on.prf \
		/usr/lib/qt4/mkspecs/features/qt.prf \
		/usr/lib/qt4/mkspecs/features/unix/thread.prf \
		/usr/lib/qt4/mkspecs/features/moc.prf \
		/usr/lib/qt4/mkspecs/features/resources.prf \
		/usr/lib/qt4/mkspecs/features/uic.prf \
		/usr/lib/qt4/mkspecs/features/yacc.prf \
		/usr/lib/qt4/mkspecs/features/lex.prf \
		/usr/lib/qt4/mkspecs/features/include_source_dir.prf \
		magic_first_wizard.pro
QMAKE_TARGET  = magic_first_wizard
DESTDIR       = 
TARGET        = magic_first_wizard

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: magic_first_wizard.pro  /usr/lib/qt4/mkspecs/linux-g++/qmake.conf /usr/lib/qt4/mkspecs/common/g++.conf \
		/usr/lib/qt4/mkspecs/common/unix.conf \
		/usr/lib/qt4/mkspecs/common/linux.conf \
		/usr/lib/qt4/mkspecs/qconfig.pri \
		/usr/lib/qt4/mkspecs/features/qt_functions.prf \
		/usr/lib/qt4/mkspecs/features/qt_config.prf \
		/usr/lib/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/lib/qt4/mkspecs/features/default_pre.prf \
		/usr/lib/qt4/mkspecs/features/debug.prf \
		/usr/lib/qt4/mkspecs/features/default_post.prf \
		/usr/lib/qt4/mkspecs/features/warn_on.prf \
		/usr/lib/qt4/mkspecs/features/qt.prf \
		/usr/lib/qt4/mkspecs/features/unix/thread.prf \
		/usr/lib/qt4/mkspecs/features/moc.prf \
		/usr/lib/qt4/mkspecs/features/resources.prf \
		/usr/lib/qt4/mkspecs/features/uic.prf \
		/usr/lib/qt4/mkspecs/features/yacc.prf \
		/usr/lib/qt4/mkspecs/features/lex.prf \
		/usr/lib/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib/qt4/lib/libQtGui.prl \
		/usr/lib/qt4/lib/libQtCore.prl
	$(QMAKE) -spec /usr/lib/qt4/mkspecs/linux-g++ -unix CONFIG+=debug -o Makefile magic_first_wizard.pro
/usr/lib/qt4/mkspecs/common/g++.conf:
/usr/lib/qt4/mkspecs/common/unix.conf:
/usr/lib/qt4/mkspecs/common/linux.conf:
/usr/lib/qt4/mkspecs/qconfig.pri:
/usr/lib/qt4/mkspecs/features/qt_functions.prf:
/usr/lib/qt4/mkspecs/features/qt_config.prf:
/usr/lib/qt4/mkspecs/features/exclusive_builds.prf:
/usr/lib/qt4/mkspecs/features/default_pre.prf:
/usr/lib/qt4/mkspecs/features/debug.prf:
/usr/lib/qt4/mkspecs/features/default_post.prf:
/usr/lib/qt4/mkspecs/features/warn_on.prf:
/usr/lib/qt4/mkspecs/features/qt.prf:
/usr/lib/qt4/mkspecs/features/unix/thread.prf:
/usr/lib/qt4/mkspecs/features/moc.prf:
/usr/lib/qt4/mkspecs/features/resources.prf:
/usr/lib/qt4/mkspecs/features/uic.prf:
/usr/lib/qt4/mkspecs/features/yacc.prf:
/usr/lib/qt4/mkspecs/features/lex.prf:
/usr/lib/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib/qt4/lib/libQtGui.prl:
/usr/lib/qt4/lib/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -spec /usr/lib/qt4/mkspecs/linux-g++ -unix CONFIG+=debug -o Makefile magic_first_wizard.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/magic_first_wizard1.0.0 || $(MKDIR) .tmp/magic_first_wizard1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/magic_first_wizard1.0.0/ && $(COPY_FILE) --parents wizard.h thankspage.h tcpipinfopage.h tcpipcfgpage.h startcfgpage.h rootlesspage.h netcardpage.h intropage.h dnscfgpage.h conclusionpage.h bootactivatepage.h .tmp/magic_first_wizard1.0.0/ && $(COPY_FILE) --parents wizard.cpp thankspage.cpp tcpipinfopage.cpp tcpipcfgpage.cpp startcfgpage.cpp rootless.cpp netcardpage.cpp main.cpp intropage.cpp dnscfgpage.cpp conclusionpage.cpp bootactivatepage.cpp .tmp/magic_first_wizard1.0.0/ && $(COPY_FILE) --parents magic_first_wizard_zh_CN.ts .tmp/magic_first_wizard1.0.0/ && (cd `dirname .tmp/magic_first_wizard1.0.0` && $(TAR) magic_first_wizard1.0.0.tar magic_first_wizard1.0.0 && $(COMPRESS) magic_first_wizard1.0.0.tar) && $(MOVE) `dirname .tmp/magic_first_wizard1.0.0`/magic_first_wizard1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/magic_first_wizard1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_wizard.cpp moc_thankspage.cpp moc_conclusionpage.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_wizard.cpp moc_thankspage.cpp moc_conclusionpage.cpp
moc_wizard.cpp: wizard.h
	/usr/lib/qt4/bin/moc $(DEFINES) $(INCPATH) wizard.h -o moc_wizard.cpp

moc_thankspage.cpp: thankspage.h
	/usr/lib/qt4/bin/moc $(DEFINES) $(INCPATH) thankspage.h -o moc_thankspage.cpp

moc_conclusionpage.cpp: conclusionpage.h
	/usr/lib/qt4/bin/moc $(DEFINES) $(INCPATH) conclusionpage.h -o moc_conclusionpage.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean 

####### Compile

wizard.o: wizard.cpp wizard.h \
		intropage.h \
		netcardpage.h \
		startcfgpage.h \
		tcpipcfgpage.h \
		dnscfgpage.h \
		rootlesspage.h \
		bootactivatepage.h \
		conclusionpage.h \
		thankspage.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o wizard.o wizard.cpp

thankspage.o: thankspage.cpp thankspage.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o thankspage.o thankspage.cpp

tcpipinfopage.o: tcpipinfopage.cpp tcpipinfopage.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o tcpipinfopage.o tcpipinfopage.cpp

tcpipcfgpage.o: tcpipcfgpage.cpp tcpipcfgpage.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o tcpipcfgpage.o tcpipcfgpage.cpp

startcfgpage.o: startcfgpage.cpp startcfgpage.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o startcfgpage.o startcfgpage.cpp

rootless.o: rootless.cpp rootlesspage.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o rootless.o rootless.cpp

netcardpage.o: netcardpage.cpp netcardpage.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o netcardpage.o netcardpage.cpp

main.o: main.cpp wizard.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

intropage.o: intropage.cpp intropage.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o intropage.o intropage.cpp

dnscfgpage.o: dnscfgpage.cpp dnscfgpage.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o dnscfgpage.o dnscfgpage.cpp

conclusionpage.o: conclusionpage.cpp conclusionpage.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o conclusionpage.o conclusionpage.cpp

bootactivatepage.o: bootactivatepage.cpp bootactivatepage.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o bootactivatepage.o bootactivatepage.cpp

moc_wizard.o: moc_wizard.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_wizard.o moc_wizard.cpp

moc_thankspage.o: moc_thankspage.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_thankspage.o moc_thankspage.cpp

moc_conclusionpage.o: moc_conclusionpage.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_conclusionpage.o moc_conclusionpage.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

