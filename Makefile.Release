#############################################################################
# Makefile for building: magic_first_wizard
# Generated by qmake (2.01a) (Qt 4.6.0) on: ??? ??? 24 15:51:42 2009
# Project:  magic_first_wizard.pro
# Template: app
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DUNICODE -DQT_LARGEFILE_SUPPORT -DQT_DLL -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_CORE_LIB -DQT_THREAD_SUPPORT -DQT_NEEDS_QMAIN
CFLAGS        = -O2 -Wall $(DEFINES)
CXXFLAGS      = -O2 -frtti -fexceptions -mthreads -Wall $(DEFINES)
INCPATH       = -I"c:\Qt\2009.05\qt\include\QtCore" -I"c:\Qt\2009.05\qt\include\QtGui" -I"c:\Qt\2009.05\qt\include" -I"c:\Qt\2009.05\qt\include\ActiveQt" -I"release" -I"c:\Qt\2009.05\qt\mkspecs\win32-g++"
LINK        =        g++
LFLAGS        =        -enable-stdcall-fixup -Wl,-enable-auto-import -Wl,-enable-runtime-pseudo-reloc -Wl,-s -mthreads -Wl -Wl,-subsystem,windows
LIBS        =        -L"c:\Qt\2009.05\qt\lib" -lmingw32 -lqtmain -lQtGui4 -lQtCore4 
QMAKE         = c:\qt\2009.05\qt\bin\qmake.exe
IDC           = c:\Qt\2009.05\qt\bin\idc.exe
IDL           = midl
ZIP           = zip -r -9
DEF_FILE      = 
RES_FILE      = 
COPY          = copy /y
COPY_FILE     = $(COPY)
COPY_DIR      = xcopy /s /q /y /i
DEL_FILE      = del
DEL_DIR       = rmdir
MOVE          = move
CHK_DIR_EXISTS= if not exist
MKDIR         = mkdir
INSTALL_FILE    = $(COPY_FILE)
INSTALL_PROGRAM = $(COPY_FILE)
INSTALL_DIR     = $(COPY_DIR)

####### Output directory

OBJECTS_DIR   = release

####### Files

SOURCES       = wizard.cpp \
		thankspage.cpp \
		tcpipinfopage.cpp \
		tcpipcfgpage.cpp \
		startcfgpage.cpp \
		rootless.cpp \
		netcardpage.cpp \
		main.cpp \
		intropage.cpp \
		dnscfgpage.cpp \
		conclusionpage.cpp \
		bootactivatepage.cpp release\moc_wizard.cpp \
		release\moc_thankspage.cpp \
		release\moc_conclusionpage.cpp
OBJECTS       = release/wizard.o \
		release/thankspage.o \
		release/tcpipinfopage.o \
		release/tcpipcfgpage.o \
		release/startcfgpage.o \
		release/rootless.o \
		release/netcardpage.o \
		release/main.o \
		release/intropage.o \
		release/dnscfgpage.o \
		release/conclusionpage.o \
		release/bootactivatepage.o \
		release/moc_wizard.o \
		release/moc_thankspage.o \
		release/moc_conclusionpage.o
DIST          = 
QMAKE_TARGET  = magic_first_wizard
DESTDIR        = release\ #avoid trailing-slash linebreak
TARGET         = magic_first_wizard.exe
DESTDIR_TARGET = release\magic_first_wizard.exe

####### Implicit rules

.SUFFIXES: .cpp .cc .cxx .c

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

first: all
all: Makefile.Release  $(DESTDIR_TARGET)

$(DESTDIR_TARGET):  $(OBJECTS) 
	$(LINK) $(LFLAGS) -o $(DESTDIR_TARGET) object_script.magic_first_wizard.Release  $(LIBS)


qmake:  FORCE
	@$(QMAKE) -spec c:\Qt\2009.05\qt\mkspecs\win32-g++ -win32 -o Makefile.Release magic_first_wizard.pro

dist:
	$(ZIP) magic_first_wizard.zip $(SOURCES) $(DIST) magic_first_wizard.pro c:\Qt\2009.05\qt\mkspecs\qconfig.pri c:\Qt\2009.05\qt\mkspecs\features\qt_functions.prf c:\Qt\2009.05\qt\mkspecs\features\qt_config.prf c:\Qt\2009.05\qt\mkspecs\features\exclusive_builds.prf c:\Qt\2009.05\qt\mkspecs\features\default_pre.prf c:\Qt\2009.05\qt\mkspecs\features\win32\default_pre.prf c:\Qt\2009.05\qt\mkspecs\features\release.prf c:\Qt\2009.05\qt\mkspecs\features\debug_and_release.prf c:\Qt\2009.05\qt\mkspecs\features\default_post.prf c:\Qt\2009.05\qt\mkspecs\features\win32\default_post.prf c:\Qt\2009.05\qt\mkspecs\features\build_pass.prf c:\Qt\2009.05\qt\mkspecs\features\win32\rtti.prf c:\Qt\2009.05\qt\mkspecs\features\win32\exceptions.prf c:\Qt\2009.05\qt\mkspecs\features\win32\stl.prf c:\Qt\2009.05\qt\mkspecs\features\shared.prf c:\Qt\2009.05\qt\mkspecs\features\warn_on.prf c:\Qt\2009.05\qt\mkspecs\features\qt.prf c:\Qt\2009.05\qt\mkspecs\features\win32\thread.prf c:\Qt\2009.05\qt\mkspecs\features\moc.prf c:\Qt\2009.05\qt\mkspecs\features\win32\windows.prf c:\Qt\2009.05\qt\mkspecs\features\resources.prf c:\Qt\2009.05\qt\mkspecs\features\uic.prf c:\Qt\2009.05\qt\mkspecs\features\yacc.prf c:\Qt\2009.05\qt\mkspecs\features\lex.prf c:\Qt\2009.05\qt\mkspecs\features\include_source_dir.prf c:\Qt\2009.05\qt\lib\qtmain.prl  HEADERS RESOURCES IMAGES SOURCES OBJECTIVE_SOURCES FORMS YACCSOURCES YACCSOURCES LEXSOURCES 

clean: compiler_clean 
	-$(DEL_FILE) release\wizard.o release\thankspage.o release\tcpipinfopage.o release\tcpipcfgpage.o release\startcfgpage.o release\rootless.o release\netcardpage.o release\main.o release\intropage.o release\dnscfgpage.o release\conclusionpage.o release\bootactivatepage.o release\moc_wizard.o release\moc_thankspage.o release\moc_conclusionpage.o

distclean: clean
	-$(DEL_FILE) $(DESTDIR_TARGET)
	-$(DEL_FILE) Makefile.Release

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: release/moc_wizard.cpp release/moc_thankspage.cpp release/moc_conclusionpage.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) release\moc_wizard.cpp release\moc_thankspage.cpp release\moc_conclusionpage.cpp
release/moc_wizard.cpp: wizard.h
	C:/Qt/2009.05/qt/bin\moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 wizard.h -o release\moc_wizard.cpp

release/moc_thankspage.cpp: thankspage.h
	C:/Qt/2009.05/qt/bin\moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 thankspage.h -o release\moc_thankspage.cpp

release/moc_conclusionpage.cpp: conclusionpage.h
	C:/Qt/2009.05/qt/bin\moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 conclusionpage.h -o release\moc_conclusionpage.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean 



####### Compile

release/wizard.o: wizard.cpp wizard.h \
		intropage.h \
		netcardpage.h \
		startcfgpage.h \
		tcpipcfgpage.h \
		dnscfgpage.h \
		rootlesspage.h \
		bootactivatepage.h \
		conclusionpage.h \
		thankspage.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\wizard.o wizard.cpp

release/thankspage.o: thankspage.cpp thankspage.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\thankspage.o thankspage.cpp

release/tcpipinfopage.o: tcpipinfopage.cpp tcpipinfopage.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\tcpipinfopage.o tcpipinfopage.cpp

release/tcpipcfgpage.o: tcpipcfgpage.cpp tcpipcfgpage.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\tcpipcfgpage.o tcpipcfgpage.cpp

release/startcfgpage.o: startcfgpage.cpp startcfgpage.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\startcfgpage.o startcfgpage.cpp

release/rootless.o: rootless.cpp rootlesspage.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\rootless.o rootless.cpp

release/netcardpage.o: netcardpage.cpp netcardpage.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\netcardpage.o netcardpage.cpp

release/main.o: main.cpp wizard.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\main.o main.cpp

release/intropage.o: intropage.cpp intropage.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\intropage.o intropage.cpp

release/dnscfgpage.o: dnscfgpage.cpp dnscfgpage.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\dnscfgpage.o dnscfgpage.cpp

release/conclusionpage.o: conclusionpage.cpp conclusionpage.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\conclusionpage.o conclusionpage.cpp

release/bootactivatepage.o: bootactivatepage.cpp bootactivatepage.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\bootactivatepage.o bootactivatepage.cpp

release/moc_wizard.o: release/moc_wizard.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\moc_wizard.o release\moc_wizard.cpp

release/moc_thankspage.o: release/moc_thankspage.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\moc_thankspage.o release\moc_thankspage.cpp

release/moc_conclusionpage.o: release/moc_conclusionpage.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\moc_conclusionpage.o release\moc_conclusionpage.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

